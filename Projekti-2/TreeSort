//Klasa Node
class Node{
    int value;
    Node left;
    Node right;
    Node(int value){
        this.value = value;
        left = null;
        right = null;
    }
}
//Klasa Tree
class Tree{
    Node node;
    Tree(int value){
        node = new Node(value);
    }
    //metoda node qe sherben per inserim te vargut
    public Node insert(Node node, int value){
        if(node == null){
            return new Node(value);
        }
        // Lëviz majtas nëse vlera e kaluar është
        // më pak se nyja aktuale
        if(value < node.value){
            node.left = insert(node.left, value);
        }
        // Lëviz majtas nëse vlera e kaluar është
        // më shume se nyja aktuale
        else if(value > node.value){
            node.right = insert(node.right, value);
        }
        return node;
    }

    // Për përshkuar me radhë (order)
    public void inOrder(Node node){
        if(node != null){
            inOrder(node.left);
            System.out.print(node.value + " ");
            inOrder(node.right);
        }
    }
    
    public void inOrderDesc(Node node){
        if(node != null){
            inOrderDesc(node.right);
            System.out.print(node.value + " ");
            inOrderDesc(node.left);
        }
    }
}
//Klasa TreeSort
public class TreeSort {
    //Metoda main (kryesore)
    public static void main(String[] args) {
        int[] arr = {50, 30, 70, 15, 7, 62, 22, 35, 87, 22, 31};
        System.out.println("Vargu Original- "+java.util.Arrays.toString(arr));
        Tree tree = new Tree(arr[0]);
        for(int num : arr){
            tree.insert(tree.node, num);
        }
        System.out.println("Vargu i renditur (ne rritje)- ");
        tree.inOrder(tree.node);
        System.out.println();
        System.out.println("Vargu i renditur (ne zbritje)- ");
        tree.inOrderDesc(tree.node);
    }
}
